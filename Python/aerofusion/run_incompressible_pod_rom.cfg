#------------------------------------------------------------------------------
# General options
#------------------------------------------------------------------------------

# Use MPI for parallelization when possible
use_mpi = True;
mpirun_cmd = "mpirun -np 1 -bind-to core"
# Logging level (verbosity)
logging_level = "INFO"; # "DEBUG"

# IO
input_filename = "data/pod_incompressible_Ferrante_3d_toydata_coarse.npz"
output_filename_prefix = "tmp/output_"

# number of dimensions
num_dimensions = 3

plot =
{
  contour =
  {
    levels = 256
    vmin = -10
    vmax =  10
  }
}

io =
{
  snapshot_data_filename_prefix = "/scratch/bermejom/runs/Ferrante_etal_2020/low_Re/freq_25_timesteps/full_domain/npz_snapshots/flow_solver_"
  pod_data_filename = "pod_data_low_Re_815snap.npz"
  rom_matrices_filename = "rom_matrices_low_Re_815snap.npz"
  rom_integration_data_filename = "rom_integration_data_low_Re_815snap.npz"
}

pod =
{
  input_snapshot_data =
  {
    # number of digits in file names that will be padded with zeros
    padding_zeros = 10;
    # Period (in simulation time steps) to process
    time_step_min   = 2480000; # 2480000;
    time_step_max   = 2480800; # 2505000;
    time_step_delta = 100;     # 25;
  }

  num_modes = 4
};

rom =
{
  calculate_matrices = True
  #calculate_matrices = False
  reynolds_number = 1.0e6
  matrices_output_filename_suffix = "matrices.npz"
  jacobian =
  {
    order_derivatives_x = 2; # 6 
    order_derivatives_y = 2; # 6 
    order_derivatives_z = 2; # 6 
  }
}
